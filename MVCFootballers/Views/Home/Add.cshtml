@model MVCFootballers.Models.Footballer

@{
    ViewBag.Title = "Add";
}

<h2 class="addTitle">Add</h2>

@using (Html.BeginForm())
{
    
     @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4 class="addPlayer">Player</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(f => f.Name, htmlAttributes: new { @class = "control-label col-md-2 whiteLabel" })
                <div class="col-md-10">
                    @Html.EditorFor(f => f.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(f => f.Age, htmlAttributes: new { @class = "control-label col-md-2 whiteLabel" })
                <div class="col-md-10">
                    @Html.EditorFor(f => f.Age, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(f => f.Position, htmlAttributes: new { @class = "control-label col-md-2 whiteLabel" })
                <div class="col-md-10">
                    @Html.EditorFor(f => f.Position, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(f => f.Value, htmlAttributes: new { @class = "control-label col-md-2 whiteLabel" })
                <div class="col-md-10">
                    @Html.EditorFor(f => f.Value, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(f => f.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2 whiteLabel" })
                <div class="col-md-10">
                @Html.EditorFor(f => f.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(f => f.VideoUrl, htmlAttributes: new { @class = "control-label col-md-2 whiteLabel" })
                <div class="col-md-10">
                    @Html.EditorFor(f => f.VideoUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VideoUrl, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Add Player" class="btn btn-default" />
                 </div>
            </div>
           
      </div>
    }
@Html.ActionLink("Back to squad", "Index")



